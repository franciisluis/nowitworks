Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    EXPLAMATION
    INTERROGATION
    MOD

Grammar

Rule 0     S' -> program
Rule 1     program -> program program
Rule 2     program -> variable_Declaration
Rule 3     program -> statement
Rule 4     program -> comment
Rule 5     statement -> for_statement
Rule 6     statement -> while_statement
Rule 7     statement -> if_statement
Rule 8     statement -> switch_statement
Rule 9     comment -> COD_COMMENT
Rule 10    comment -> COMMENT_MONOLINE
Rule 11    variable_Declaration -> type sequence_variable SEMICOLON
Rule 12    type -> FLOAT
Rule 13    type -> INT
Rule 14    type -> CHAR
Rule 15    sequence_variable -> variable_characteristics COMMA sequence_variable
Rule 16    sequence_variable -> variable_characteristics
Rule 17    variable_characteristics -> NAME LCOLC NUMBER RCOLC
Rule 18    variable_characteristics -> NAME ASSIGN expression
Rule 19    variable_characteristics -> NAME ASSIGN NUMBER POINT NUMBER
Rule 20    variable_characteristics -> NAME ASSIGN NUMBER
Rule 21    variable_characteristics -> NAME
Rule 22    variable_characteristics -> expression
Rule 23    if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE
Rule 24    if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE
Rule 25    while_statement -> WHILE LPAREN expression RPAREN LBRACE block RBRACE
Rule 26    for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE
Rule 27    switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE
Rule 28    switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE
Rule 29    switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE
Rule 30    body_case -> CASE sintax_case
Rule 31    sintax_case -> expression COLON LBRACE block break_statement RBRACE
Rule 32    sintax_default -> DEFAULT COLON LBRACE block RBRACE
Rule 33    sintax_default -> empty
Rule 34    down_up -> NAME MINUS MINUS
Rule 35    down_up -> NAME PLUS PLUS
Rule 36    down_up -> NAME ASSIGN expression
Rule 37    down_up -> expression
Rule 38    expression -> expression BIGGER expression
Rule 39    expression -> expression SMALLER expression
Rule 40    expression -> expression BIGGEREQUALS expression
Rule 41    expression -> expression SMALLEREQUALS expression
Rule 42    expression -> expression EQUALS expression
Rule 43    expression -> expression DIFF expression
Rule 44    expression -> expression AND expression
Rule 45    expression -> expression OR expression
Rule 46    expression -> expression PLUS expression
Rule 47    expression -> expression MINUS expression
Rule 48    expression -> expression TIMES expression
Rule 49    expression -> expression DIVIDE expression
Rule 50    expression -> variable SUMEQUALS expression
Rule 51    expression -> variable MINUSEQUALS expression
Rule 52    expression -> variable TIMESEQUALS expression
Rule 53    expression -> variable DIVIDEEQUALS expression
Rule 54    expression -> literal
Rule 55    expression -> variable
Rule 56    literal -> NORMALSTRING
Rule 57    literal -> NUMBER
Rule 58    variable -> NAME
Rule 59    block -> list_Declarations
Rule 60    list_Declarations -> variable_Declaration list_Declarations
Rule 61    list_Declarations -> sequence_variable SEMICOLON list_Declarations
Rule 62    list_Declarations -> empty
Rule 63    empty -> <empty>
Rule 64    break_statement -> BREAK SEMICOLON

Terminals, with rules where they appear

AND                  : 44
ASSIGN               : 18 19 20 26 36
BIGGER               : 38
BIGGEREQUALS         : 40
BREAK                : 64
CASE                 : 30
CHAR                 : 14
COD_COMMENT          : 9
COLON                : 31 32
COMMA                : 15
COMMENT_MONOLINE     : 10
DEFAULT              : 32
DIFF                 : 43
DIVIDE               : 49
DIVIDEEQUALS         : 53
ELSE                 : 23
EQUALS               : 42
EXPLAMATION          : 
FLOAT                : 12
FOR                  : 26
IF                   : 23 24
INT                  : 13
INTERROGATION        : 
LBRACE               : 23 23 24 25 26 27 28 29 31 32
LCOLC                : 17
LPAREN               : 23 24 25 26 27 28 29
MINUS                : 34 34 47
MINUSEQUALS          : 51
MOD                  : 
NAME                 : 17 18 19 20 21 26 27 28 29 34 35 36 58
NORMALSTRING         : 56
NUMBER               : 17 19 19 20 57
OR                   : 45
PLUS                 : 35 35 46
POINT                : 19
RBRACE               : 23 23 24 25 26 27 28 29 31 32
RCOLC                : 17
RPAREN               : 23 24 25 26 27 28 29
SEMICOLON            : 11 26 26 61 64
SMALLER              : 39
SMALLEREQUALS        : 41
SUMEQUALS            : 50
SWITCH               : 27 28 29
TIMES                : 48
TIMESEQUALS          : 52
WHILE                : 25
error                : 

Nonterminals, with rules where they appear

block                : 23 23 24 25 26 31 32
body_case            : 27 27 27 28 28 29
break_statement      : 31
comment              : 4
down_up              : 26
empty                : 33 62
expression           : 18 22 23 24 25 26 26 31 36 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 51 52 53
for_statement        : 5
if_statement         : 7
list_Declarations    : 59 60 61
literal              : 54
program              : 1 1 0
sequence_variable    : 11 15 61
sintax_case          : 30
sintax_default       : 27 28 29
statement            : 3
switch_statement     : 8
type                 : 11 26
variable             : 50 51 52 53 55
variable_Declaration : 2 60
variable_characteristics : 15 16
while_statement      : 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program program
    (2) program -> . variable_Declaration
    (3) program -> . statement
    (4) program -> . comment
    (11) variable_Declaration -> . type sequence_variable SEMICOLON
    (5) statement -> . for_statement
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . switch_statement
    (9) comment -> . COD_COMMENT
    (10) comment -> . COMMENT_MONOLINE
    (12) type -> . FLOAT
    (13) type -> . INT
    (14) type -> . CHAR
    (26) for_statement -> . FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE
    (25) while_statement -> . WHILE LPAREN expression RPAREN LBRACE block RBRACE
    (23) if_statement -> . IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE
    (24) if_statement -> . IF LPAREN expression RPAREN LBRACE block RBRACE
    (27) switch_statement -> . SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE
    (28) switch_statement -> . SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE
    (29) switch_statement -> . SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE

    COD_COMMENT     shift and go to state 10
    COMMENT_MONOLINE shift and go to state 11
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    CHAR            shift and go to state 14
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17
    SWITCH          shift and go to state 18

    program                        shift and go to state 1
    variable_Declaration           shift and go to state 2
    statement                      shift and go to state 3
    comment                        shift and go to state 4
    type                           shift and go to state 5
    for_statement                  shift and go to state 6
    while_statement                shift and go to state 7
    if_statement                   shift and go to state 8
    switch_statement               shift and go to state 9

state 1

    (0) S' -> program .
    (1) program -> program . program
    (1) program -> . program program
    (2) program -> . variable_Declaration
    (3) program -> . statement
    (4) program -> . comment
    (11) variable_Declaration -> . type sequence_variable SEMICOLON
    (5) statement -> . for_statement
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . switch_statement
    (9) comment -> . COD_COMMENT
    (10) comment -> . COMMENT_MONOLINE
    (12) type -> . FLOAT
    (13) type -> . INT
    (14) type -> . CHAR
    (26) for_statement -> . FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE
    (25) while_statement -> . WHILE LPAREN expression RPAREN LBRACE block RBRACE
    (23) if_statement -> . IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE
    (24) if_statement -> . IF LPAREN expression RPAREN LBRACE block RBRACE
    (27) switch_statement -> . SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE
    (28) switch_statement -> . SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE
    (29) switch_statement -> . SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE

    COD_COMMENT     shift and go to state 10
    COMMENT_MONOLINE shift and go to state 11
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    CHAR            shift and go to state 14
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17
    SWITCH          shift and go to state 18

    program                        shift and go to state 19
    variable_Declaration           shift and go to state 2
    statement                      shift and go to state 3
    comment                        shift and go to state 4
    type                           shift and go to state 5
    for_statement                  shift and go to state 6
    while_statement                shift and go to state 7
    if_statement                   shift and go to state 8
    switch_statement               shift and go to state 9

state 2

    (2) program -> variable_Declaration .

    COD_COMMENT     reduce using rule 2 (program -> variable_Declaration .)
    COMMENT_MONOLINE reduce using rule 2 (program -> variable_Declaration .)
    FLOAT           reduce using rule 2 (program -> variable_Declaration .)
    INT             reduce using rule 2 (program -> variable_Declaration .)
    CHAR            reduce using rule 2 (program -> variable_Declaration .)
    FOR             reduce using rule 2 (program -> variable_Declaration .)
    WHILE           reduce using rule 2 (program -> variable_Declaration .)
    IF              reduce using rule 2 (program -> variable_Declaration .)
    SWITCH          reduce using rule 2 (program -> variable_Declaration .)
    $end            reduce using rule 2 (program -> variable_Declaration .)


state 3

    (3) program -> statement .

    COD_COMMENT     reduce using rule 3 (program -> statement .)
    COMMENT_MONOLINE reduce using rule 3 (program -> statement .)
    FLOAT           reduce using rule 3 (program -> statement .)
    INT             reduce using rule 3 (program -> statement .)
    CHAR            reduce using rule 3 (program -> statement .)
    FOR             reduce using rule 3 (program -> statement .)
    WHILE           reduce using rule 3 (program -> statement .)
    IF              reduce using rule 3 (program -> statement .)
    SWITCH          reduce using rule 3 (program -> statement .)
    $end            reduce using rule 3 (program -> statement .)


state 4

    (4) program -> comment .

    COD_COMMENT     reduce using rule 4 (program -> comment .)
    COMMENT_MONOLINE reduce using rule 4 (program -> comment .)
    FLOAT           reduce using rule 4 (program -> comment .)
    INT             reduce using rule 4 (program -> comment .)
    CHAR            reduce using rule 4 (program -> comment .)
    FOR             reduce using rule 4 (program -> comment .)
    WHILE           reduce using rule 4 (program -> comment .)
    IF              reduce using rule 4 (program -> comment .)
    SWITCH          reduce using rule 4 (program -> comment .)
    $end            reduce using rule 4 (program -> comment .)


state 5

    (11) variable_Declaration -> type . sequence_variable SEMICOLON
    (15) sequence_variable -> . variable_characteristics COMMA sequence_variable
    (16) sequence_variable -> . variable_characteristics
    (17) variable_characteristics -> . NAME LCOLC NUMBER RCOLC
    (18) variable_characteristics -> . NAME ASSIGN expression
    (19) variable_characteristics -> . NAME ASSIGN NUMBER POINT NUMBER
    (20) variable_characteristics -> . NAME ASSIGN NUMBER
    (21) variable_characteristics -> . NAME
    (22) variable_characteristics -> . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 22
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    sequence_variable              shift and go to state 20
    variable_characteristics       shift and go to state 21
    expression                     shift and go to state 24
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 6

    (5) statement -> for_statement .

    COD_COMMENT     reduce using rule 5 (statement -> for_statement .)
    COMMENT_MONOLINE reduce using rule 5 (statement -> for_statement .)
    FLOAT           reduce using rule 5 (statement -> for_statement .)
    INT             reduce using rule 5 (statement -> for_statement .)
    CHAR            reduce using rule 5 (statement -> for_statement .)
    FOR             reduce using rule 5 (statement -> for_statement .)
    WHILE           reduce using rule 5 (statement -> for_statement .)
    IF              reduce using rule 5 (statement -> for_statement .)
    SWITCH          reduce using rule 5 (statement -> for_statement .)
    $end            reduce using rule 5 (statement -> for_statement .)


state 7

    (6) statement -> while_statement .

    COD_COMMENT     reduce using rule 6 (statement -> while_statement .)
    COMMENT_MONOLINE reduce using rule 6 (statement -> while_statement .)
    FLOAT           reduce using rule 6 (statement -> while_statement .)
    INT             reduce using rule 6 (statement -> while_statement .)
    CHAR            reduce using rule 6 (statement -> while_statement .)
    FOR             reduce using rule 6 (statement -> while_statement .)
    WHILE           reduce using rule 6 (statement -> while_statement .)
    IF              reduce using rule 6 (statement -> while_statement .)
    SWITCH          reduce using rule 6 (statement -> while_statement .)
    $end            reduce using rule 6 (statement -> while_statement .)


state 8

    (7) statement -> if_statement .

    COD_COMMENT     reduce using rule 7 (statement -> if_statement .)
    COMMENT_MONOLINE reduce using rule 7 (statement -> if_statement .)
    FLOAT           reduce using rule 7 (statement -> if_statement .)
    INT             reduce using rule 7 (statement -> if_statement .)
    CHAR            reduce using rule 7 (statement -> if_statement .)
    FOR             reduce using rule 7 (statement -> if_statement .)
    WHILE           reduce using rule 7 (statement -> if_statement .)
    IF              reduce using rule 7 (statement -> if_statement .)
    SWITCH          reduce using rule 7 (statement -> if_statement .)
    $end            reduce using rule 7 (statement -> if_statement .)


state 9

    (8) statement -> switch_statement .

    COD_COMMENT     reduce using rule 8 (statement -> switch_statement .)
    COMMENT_MONOLINE reduce using rule 8 (statement -> switch_statement .)
    FLOAT           reduce using rule 8 (statement -> switch_statement .)
    INT             reduce using rule 8 (statement -> switch_statement .)
    CHAR            reduce using rule 8 (statement -> switch_statement .)
    FOR             reduce using rule 8 (statement -> switch_statement .)
    WHILE           reduce using rule 8 (statement -> switch_statement .)
    IF              reduce using rule 8 (statement -> switch_statement .)
    SWITCH          reduce using rule 8 (statement -> switch_statement .)
    $end            reduce using rule 8 (statement -> switch_statement .)


state 10

    (9) comment -> COD_COMMENT .

    COD_COMMENT     reduce using rule 9 (comment -> COD_COMMENT .)
    COMMENT_MONOLINE reduce using rule 9 (comment -> COD_COMMENT .)
    FLOAT           reduce using rule 9 (comment -> COD_COMMENT .)
    INT             reduce using rule 9 (comment -> COD_COMMENT .)
    CHAR            reduce using rule 9 (comment -> COD_COMMENT .)
    FOR             reduce using rule 9 (comment -> COD_COMMENT .)
    WHILE           reduce using rule 9 (comment -> COD_COMMENT .)
    IF              reduce using rule 9 (comment -> COD_COMMENT .)
    SWITCH          reduce using rule 9 (comment -> COD_COMMENT .)
    $end            reduce using rule 9 (comment -> COD_COMMENT .)


state 11

    (10) comment -> COMMENT_MONOLINE .

    COD_COMMENT     reduce using rule 10 (comment -> COMMENT_MONOLINE .)
    COMMENT_MONOLINE reduce using rule 10 (comment -> COMMENT_MONOLINE .)
    FLOAT           reduce using rule 10 (comment -> COMMENT_MONOLINE .)
    INT             reduce using rule 10 (comment -> COMMENT_MONOLINE .)
    CHAR            reduce using rule 10 (comment -> COMMENT_MONOLINE .)
    FOR             reduce using rule 10 (comment -> COMMENT_MONOLINE .)
    WHILE           reduce using rule 10 (comment -> COMMENT_MONOLINE .)
    IF              reduce using rule 10 (comment -> COMMENT_MONOLINE .)
    SWITCH          reduce using rule 10 (comment -> COMMENT_MONOLINE .)
    $end            reduce using rule 10 (comment -> COMMENT_MONOLINE .)


state 12

    (12) type -> FLOAT .

    NAME            reduce using rule 12 (type -> FLOAT .)
    NORMALSTRING    reduce using rule 12 (type -> FLOAT .)
    NUMBER          reduce using rule 12 (type -> FLOAT .)


state 13

    (13) type -> INT .

    NAME            reduce using rule 13 (type -> INT .)
    NORMALSTRING    reduce using rule 13 (type -> INT .)
    NUMBER          reduce using rule 13 (type -> INT .)


state 14

    (14) type -> CHAR .

    NAME            reduce using rule 14 (type -> CHAR .)
    NORMALSTRING    reduce using rule 14 (type -> CHAR .)
    NUMBER          reduce using rule 14 (type -> CHAR .)


state 15

    (26) for_statement -> FOR . LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE

    LPAREN          shift and go to state 28


state 16

    (25) while_statement -> WHILE . LPAREN expression RPAREN LBRACE block RBRACE

    LPAREN          shift and go to state 29


state 17

    (23) if_statement -> IF . LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE
    (24) if_statement -> IF . LPAREN expression RPAREN LBRACE block RBRACE

    LPAREN          shift and go to state 30


state 18

    (27) switch_statement -> SWITCH . LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE
    (28) switch_statement -> SWITCH . LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE
    (29) switch_statement -> SWITCH . LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE

    LPAREN          shift and go to state 31


state 19

    (1) program -> program program .
    (1) program -> program . program
    (1) program -> . program program
    (2) program -> . variable_Declaration
    (3) program -> . statement
    (4) program -> . comment
    (11) variable_Declaration -> . type sequence_variable SEMICOLON
    (5) statement -> . for_statement
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . switch_statement
    (9) comment -> . COD_COMMENT
    (10) comment -> . COMMENT_MONOLINE
    (12) type -> . FLOAT
    (13) type -> . INT
    (14) type -> . CHAR
    (26) for_statement -> . FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE
    (25) while_statement -> . WHILE LPAREN expression RPAREN LBRACE block RBRACE
    (23) if_statement -> . IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE
    (24) if_statement -> . IF LPAREN expression RPAREN LBRACE block RBRACE
    (27) switch_statement -> . SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE
    (28) switch_statement -> . SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE
    (29) switch_statement -> . SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE

  ! shift/reduce conflict for COD_COMMENT resolved as shift
  ! shift/reduce conflict for COMMENT_MONOLINE resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
    $end            reduce using rule 1 (program -> program program .)
    COD_COMMENT     shift and go to state 10
    COMMENT_MONOLINE shift and go to state 11
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    CHAR            shift and go to state 14
    FOR             shift and go to state 15
    WHILE           shift and go to state 16
    IF              shift and go to state 17
    SWITCH          shift and go to state 18

  ! COD_COMMENT     [ reduce using rule 1 (program -> program program .) ]
  ! COMMENT_MONOLINE [ reduce using rule 1 (program -> program program .) ]
  ! FLOAT           [ reduce using rule 1 (program -> program program .) ]
  ! INT             [ reduce using rule 1 (program -> program program .) ]
  ! CHAR            [ reduce using rule 1 (program -> program program .) ]
  ! FOR             [ reduce using rule 1 (program -> program program .) ]
  ! WHILE           [ reduce using rule 1 (program -> program program .) ]
  ! IF              [ reduce using rule 1 (program -> program program .) ]
  ! SWITCH          [ reduce using rule 1 (program -> program program .) ]

    program                        shift and go to state 19
    variable_Declaration           shift and go to state 2
    statement                      shift and go to state 3
    comment                        shift and go to state 4
    type                           shift and go to state 5
    for_statement                  shift and go to state 6
    while_statement                shift and go to state 7
    if_statement                   shift and go to state 8
    switch_statement               shift and go to state 9

state 20

    (11) variable_Declaration -> type sequence_variable . SEMICOLON

    SEMICOLON       shift and go to state 32


state 21

    (15) sequence_variable -> variable_characteristics . COMMA sequence_variable
    (16) sequence_variable -> variable_characteristics .

    COMMA           shift and go to state 33
    SEMICOLON       reduce using rule 16 (sequence_variable -> variable_characteristics .)


state 22

    (17) variable_characteristics -> NAME . LCOLC NUMBER RCOLC
    (18) variable_characteristics -> NAME . ASSIGN expression
    (19) variable_characteristics -> NAME . ASSIGN NUMBER POINT NUMBER
    (20) variable_characteristics -> NAME . ASSIGN NUMBER
    (21) variable_characteristics -> NAME .
    (58) variable -> NAME .

  ! reduce/reduce conflict for COMMA resolved using rule 21 (variable_characteristics -> NAME .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 21 (variable_characteristics -> NAME .)
    LCOLC           shift and go to state 34
    ASSIGN          shift and go to state 35
    COMMA           reduce using rule 21 (variable_characteristics -> NAME .)
    SEMICOLON       reduce using rule 21 (variable_characteristics -> NAME .)
    SUMEQUALS       reduce using rule 58 (variable -> NAME .)
    MINUSEQUALS     reduce using rule 58 (variable -> NAME .)
    TIMESEQUALS     reduce using rule 58 (variable -> NAME .)
    DIVIDEEQUALS    reduce using rule 58 (variable -> NAME .)
    BIGGER          reduce using rule 58 (variable -> NAME .)
    SMALLER         reduce using rule 58 (variable -> NAME .)
    BIGGEREQUALS    reduce using rule 58 (variable -> NAME .)
    SMALLEREQUALS   reduce using rule 58 (variable -> NAME .)
    EQUALS          reduce using rule 58 (variable -> NAME .)
    DIFF            reduce using rule 58 (variable -> NAME .)
    AND             reduce using rule 58 (variable -> NAME .)
    OR              reduce using rule 58 (variable -> NAME .)
    PLUS            reduce using rule 58 (variable -> NAME .)
    MINUS           reduce using rule 58 (variable -> NAME .)
    TIMES           reduce using rule 58 (variable -> NAME .)
    DIVIDE          reduce using rule 58 (variable -> NAME .)

  ! COMMA           [ reduce using rule 58 (variable -> NAME .) ]
  ! SEMICOLON       [ reduce using rule 58 (variable -> NAME .) ]


state 23

    (57) literal -> NUMBER .

    BIGGER          reduce using rule 57 (literal -> NUMBER .)
    SMALLER         reduce using rule 57 (literal -> NUMBER .)
    BIGGEREQUALS    reduce using rule 57 (literal -> NUMBER .)
    SMALLEREQUALS   reduce using rule 57 (literal -> NUMBER .)
    EQUALS          reduce using rule 57 (literal -> NUMBER .)
    DIFF            reduce using rule 57 (literal -> NUMBER .)
    AND             reduce using rule 57 (literal -> NUMBER .)
    OR              reduce using rule 57 (literal -> NUMBER .)
    PLUS            reduce using rule 57 (literal -> NUMBER .)
    MINUS           reduce using rule 57 (literal -> NUMBER .)
    TIMES           reduce using rule 57 (literal -> NUMBER .)
    DIVIDE          reduce using rule 57 (literal -> NUMBER .)
    COMMA           reduce using rule 57 (literal -> NUMBER .)
    SEMICOLON       reduce using rule 57 (literal -> NUMBER .)
    RPAREN          reduce using rule 57 (literal -> NUMBER .)
    COLON           reduce using rule 57 (literal -> NUMBER .)


state 24

    (22) variable_characteristics -> expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    COMMA           reduce using rule 22 (variable_characteristics -> expression .)
    SEMICOLON       reduce using rule 22 (variable_characteristics -> expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 25

    (50) expression -> variable . SUMEQUALS expression
    (51) expression -> variable . MINUSEQUALS expression
    (52) expression -> variable . TIMESEQUALS expression
    (53) expression -> variable . DIVIDEEQUALS expression
    (55) expression -> variable .

    SUMEQUALS       shift and go to state 48
    MINUSEQUALS     shift and go to state 49
    TIMESEQUALS     shift and go to state 50
    DIVIDEEQUALS    shift and go to state 51
    BIGGER          reduce using rule 55 (expression -> variable .)
    SMALLER         reduce using rule 55 (expression -> variable .)
    BIGGEREQUALS    reduce using rule 55 (expression -> variable .)
    SMALLEREQUALS   reduce using rule 55 (expression -> variable .)
    EQUALS          reduce using rule 55 (expression -> variable .)
    DIFF            reduce using rule 55 (expression -> variable .)
    AND             reduce using rule 55 (expression -> variable .)
    OR              reduce using rule 55 (expression -> variable .)
    PLUS            reduce using rule 55 (expression -> variable .)
    MINUS           reduce using rule 55 (expression -> variable .)
    TIMES           reduce using rule 55 (expression -> variable .)
    DIVIDE          reduce using rule 55 (expression -> variable .)
    COMMA           reduce using rule 55 (expression -> variable .)
    SEMICOLON       reduce using rule 55 (expression -> variable .)
    RPAREN          reduce using rule 55 (expression -> variable .)
    COLON           reduce using rule 55 (expression -> variable .)


state 26

    (54) expression -> literal .

    BIGGER          reduce using rule 54 (expression -> literal .)
    SMALLER         reduce using rule 54 (expression -> literal .)
    BIGGEREQUALS    reduce using rule 54 (expression -> literal .)
    SMALLEREQUALS   reduce using rule 54 (expression -> literal .)
    EQUALS          reduce using rule 54 (expression -> literal .)
    DIFF            reduce using rule 54 (expression -> literal .)
    AND             reduce using rule 54 (expression -> literal .)
    OR              reduce using rule 54 (expression -> literal .)
    PLUS            reduce using rule 54 (expression -> literal .)
    MINUS           reduce using rule 54 (expression -> literal .)
    TIMES           reduce using rule 54 (expression -> literal .)
    DIVIDE          reduce using rule 54 (expression -> literal .)
    COMMA           reduce using rule 54 (expression -> literal .)
    SEMICOLON       reduce using rule 54 (expression -> literal .)
    RPAREN          reduce using rule 54 (expression -> literal .)
    COLON           reduce using rule 54 (expression -> literal .)


state 27

    (56) literal -> NORMALSTRING .

    BIGGER          reduce using rule 56 (literal -> NORMALSTRING .)
    SMALLER         reduce using rule 56 (literal -> NORMALSTRING .)
    BIGGEREQUALS    reduce using rule 56 (literal -> NORMALSTRING .)
    SMALLEREQUALS   reduce using rule 56 (literal -> NORMALSTRING .)
    EQUALS          reduce using rule 56 (literal -> NORMALSTRING .)
    DIFF            reduce using rule 56 (literal -> NORMALSTRING .)
    AND             reduce using rule 56 (literal -> NORMALSTRING .)
    OR              reduce using rule 56 (literal -> NORMALSTRING .)
    PLUS            reduce using rule 56 (literal -> NORMALSTRING .)
    MINUS           reduce using rule 56 (literal -> NORMALSTRING .)
    TIMES           reduce using rule 56 (literal -> NORMALSTRING .)
    DIVIDE          reduce using rule 56 (literal -> NORMALSTRING .)
    COMMA           reduce using rule 56 (literal -> NORMALSTRING .)
    SEMICOLON       reduce using rule 56 (literal -> NORMALSTRING .)
    RPAREN          reduce using rule 56 (literal -> NORMALSTRING .)
    COLON           reduce using rule 56 (literal -> NORMALSTRING .)


state 28

    (26) for_statement -> FOR LPAREN . type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE
    (12) type -> . FLOAT
    (13) type -> . INT
    (14) type -> . CHAR

    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    CHAR            shift and go to state 14

    type                           shift and go to state 52

state 29

    (25) while_statement -> WHILE LPAREN . expression RPAREN LBRACE block RBRACE
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 53
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 30

    (23) if_statement -> IF LPAREN . expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE
    (24) if_statement -> IF LPAREN . expression RPAREN LBRACE block RBRACE
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 55
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 31

    (27) switch_statement -> SWITCH LPAREN . NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE
    (28) switch_statement -> SWITCH LPAREN . NAME RPAREN LBRACE body_case body_case sintax_default RBRACE
    (29) switch_statement -> SWITCH LPAREN . NAME RPAREN LBRACE body_case sintax_default RBRACE

    NAME            shift and go to state 56


state 32

    (11) variable_Declaration -> type sequence_variable SEMICOLON .

    COD_COMMENT     reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)
    COMMENT_MONOLINE reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)
    FLOAT           reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)
    INT             reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)
    CHAR            reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)
    FOR             reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)
    WHILE           reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)
    IF              reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)
    SWITCH          reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)
    $end            reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)
    NAME            reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)
    NORMALSTRING    reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)
    NUMBER          reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)
    RBRACE          reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)
    BREAK           reduce using rule 11 (variable_Declaration -> type sequence_variable SEMICOLON .)


state 33

    (15) sequence_variable -> variable_characteristics COMMA . sequence_variable
    (15) sequence_variable -> . variable_characteristics COMMA sequence_variable
    (16) sequence_variable -> . variable_characteristics
    (17) variable_characteristics -> . NAME LCOLC NUMBER RCOLC
    (18) variable_characteristics -> . NAME ASSIGN expression
    (19) variable_characteristics -> . NAME ASSIGN NUMBER POINT NUMBER
    (20) variable_characteristics -> . NAME ASSIGN NUMBER
    (21) variable_characteristics -> . NAME
    (22) variable_characteristics -> . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 22
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    variable_characteristics       shift and go to state 21
    sequence_variable              shift and go to state 57
    expression                     shift and go to state 24
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 34

    (17) variable_characteristics -> NAME LCOLC . NUMBER RCOLC

    NUMBER          shift and go to state 58


state 35

    (18) variable_characteristics -> NAME ASSIGN . expression
    (19) variable_characteristics -> NAME ASSIGN . NUMBER POINT NUMBER
    (20) variable_characteristics -> NAME ASSIGN . NUMBER
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NUMBER          shift and go to state 60
    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27

    expression                     shift and go to state 59
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 36

    (38) expression -> expression BIGGER . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 61
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 37

    (39) expression -> expression SMALLER . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 62
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 38

    (40) expression -> expression BIGGEREQUALS . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 63
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 39

    (41) expression -> expression SMALLEREQUALS . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 64
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 40

    (42) expression -> expression EQUALS . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 65
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 41

    (43) expression -> expression DIFF . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 66
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 42

    (44) expression -> expression AND . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 67
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 43

    (45) expression -> expression OR . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 68
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 44

    (46) expression -> expression PLUS . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 69
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 45

    (47) expression -> expression MINUS . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 70
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 46

    (48) expression -> expression TIMES . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 71
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 47

    (49) expression -> expression DIVIDE . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 72
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 48

    (50) expression -> variable SUMEQUALS . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    variable                       shift and go to state 25
    expression                     shift and go to state 73
    literal                        shift and go to state 26

state 49

    (51) expression -> variable MINUSEQUALS . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    variable                       shift and go to state 25
    expression                     shift and go to state 74
    literal                        shift and go to state 26

state 50

    (52) expression -> variable TIMESEQUALS . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    variable                       shift and go to state 25
    expression                     shift and go to state 75
    literal                        shift and go to state 26

state 51

    (53) expression -> variable DIVIDEEQUALS . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    variable                       shift and go to state 25
    expression                     shift and go to state 76
    literal                        shift and go to state 26

state 52

    (26) for_statement -> FOR LPAREN type . NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE

    NAME            shift and go to state 77


state 53

    (25) while_statement -> WHILE LPAREN expression . RPAREN LBRACE block RBRACE
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 78
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 54

    (58) variable -> NAME .

    SUMEQUALS       reduce using rule 58 (variable -> NAME .)
    MINUSEQUALS     reduce using rule 58 (variable -> NAME .)
    TIMESEQUALS     reduce using rule 58 (variable -> NAME .)
    DIVIDEEQUALS    reduce using rule 58 (variable -> NAME .)
    RPAREN          reduce using rule 58 (variable -> NAME .)
    BIGGER          reduce using rule 58 (variable -> NAME .)
    SMALLER         reduce using rule 58 (variable -> NAME .)
    BIGGEREQUALS    reduce using rule 58 (variable -> NAME .)
    SMALLEREQUALS   reduce using rule 58 (variable -> NAME .)
    EQUALS          reduce using rule 58 (variable -> NAME .)
    DIFF            reduce using rule 58 (variable -> NAME .)
    AND             reduce using rule 58 (variable -> NAME .)
    OR              reduce using rule 58 (variable -> NAME .)
    PLUS            reduce using rule 58 (variable -> NAME .)
    MINUS           reduce using rule 58 (variable -> NAME .)
    TIMES           reduce using rule 58 (variable -> NAME .)
    DIVIDE          reduce using rule 58 (variable -> NAME .)
    COMMA           reduce using rule 58 (variable -> NAME .)
    SEMICOLON       reduce using rule 58 (variable -> NAME .)
    COLON           reduce using rule 58 (variable -> NAME .)


state 55

    (23) if_statement -> IF LPAREN expression . RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE
    (24) if_statement -> IF LPAREN expression . RPAREN LBRACE block RBRACE
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 79
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 56

    (27) switch_statement -> SWITCH LPAREN NAME . RPAREN LBRACE body_case body_case body_case sintax_default RBRACE
    (28) switch_statement -> SWITCH LPAREN NAME . RPAREN LBRACE body_case body_case sintax_default RBRACE
    (29) switch_statement -> SWITCH LPAREN NAME . RPAREN LBRACE body_case sintax_default RBRACE

    RPAREN          shift and go to state 80


state 57

    (15) sequence_variable -> variable_characteristics COMMA sequence_variable .

    SEMICOLON       reduce using rule 15 (sequence_variable -> variable_characteristics COMMA sequence_variable .)


state 58

    (17) variable_characteristics -> NAME LCOLC NUMBER . RCOLC

    RCOLC           shift and go to state 81


state 59

    (18) variable_characteristics -> NAME ASSIGN expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    COMMA           reduce using rule 18 (variable_characteristics -> NAME ASSIGN expression .)
    SEMICOLON       reduce using rule 18 (variable_characteristics -> NAME ASSIGN expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 60

    (19) variable_characteristics -> NAME ASSIGN NUMBER . POINT NUMBER
    (20) variable_characteristics -> NAME ASSIGN NUMBER .
    (57) literal -> NUMBER .

  ! reduce/reduce conflict for COMMA resolved using rule 20 (variable_characteristics -> NAME ASSIGN NUMBER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 20 (variable_characteristics -> NAME ASSIGN NUMBER .)
    POINT           shift and go to state 82
    COMMA           reduce using rule 20 (variable_characteristics -> NAME ASSIGN NUMBER .)
    SEMICOLON       reduce using rule 20 (variable_characteristics -> NAME ASSIGN NUMBER .)
    BIGGER          reduce using rule 57 (literal -> NUMBER .)
    SMALLER         reduce using rule 57 (literal -> NUMBER .)
    BIGGEREQUALS    reduce using rule 57 (literal -> NUMBER .)
    SMALLEREQUALS   reduce using rule 57 (literal -> NUMBER .)
    EQUALS          reduce using rule 57 (literal -> NUMBER .)
    DIFF            reduce using rule 57 (literal -> NUMBER .)
    AND             reduce using rule 57 (literal -> NUMBER .)
    OR              reduce using rule 57 (literal -> NUMBER .)
    PLUS            reduce using rule 57 (literal -> NUMBER .)
    MINUS           reduce using rule 57 (literal -> NUMBER .)
    TIMES           reduce using rule 57 (literal -> NUMBER .)
    DIVIDE          reduce using rule 57 (literal -> NUMBER .)

  ! COMMA           [ reduce using rule 57 (literal -> NUMBER .) ]
  ! SEMICOLON       [ reduce using rule 57 (literal -> NUMBER .) ]


state 61

    (38) expression -> expression BIGGER expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 38 (expression -> expression BIGGER expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression BIGGER expression .)
    RPAREN          reduce using rule 38 (expression -> expression BIGGER expression .)
    COLON           reduce using rule 38 (expression -> expression BIGGER expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 38 (expression -> expression BIGGER expression .) ]
  ! SMALLER         [ reduce using rule 38 (expression -> expression BIGGER expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 38 (expression -> expression BIGGER expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 38 (expression -> expression BIGGER expression .) ]
  ! EQUALS          [ reduce using rule 38 (expression -> expression BIGGER expression .) ]
  ! DIFF            [ reduce using rule 38 (expression -> expression BIGGER expression .) ]
  ! AND             [ reduce using rule 38 (expression -> expression BIGGER expression .) ]
  ! OR              [ reduce using rule 38 (expression -> expression BIGGER expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression BIGGER expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression BIGGER expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression BIGGER expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression BIGGER expression .) ]


state 62

    (39) expression -> expression SMALLER expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 39 (expression -> expression SMALLER expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression SMALLER expression .)
    RPAREN          reduce using rule 39 (expression -> expression SMALLER expression .)
    COLON           reduce using rule 39 (expression -> expression SMALLER expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 39 (expression -> expression SMALLER expression .) ]
  ! SMALLER         [ reduce using rule 39 (expression -> expression SMALLER expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 39 (expression -> expression SMALLER expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 39 (expression -> expression SMALLER expression .) ]
  ! EQUALS          [ reduce using rule 39 (expression -> expression SMALLER expression .) ]
  ! DIFF            [ reduce using rule 39 (expression -> expression SMALLER expression .) ]
  ! AND             [ reduce using rule 39 (expression -> expression SMALLER expression .) ]
  ! OR              [ reduce using rule 39 (expression -> expression SMALLER expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> expression SMALLER expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression SMALLER expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression SMALLER expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression SMALLER expression .) ]


state 63

    (40) expression -> expression BIGGEREQUALS expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 40 (expression -> expression BIGGEREQUALS expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression BIGGEREQUALS expression .)
    RPAREN          reduce using rule 40 (expression -> expression BIGGEREQUALS expression .)
    COLON           reduce using rule 40 (expression -> expression BIGGEREQUALS expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 40 (expression -> expression BIGGEREQUALS expression .) ]
  ! SMALLER         [ reduce using rule 40 (expression -> expression BIGGEREQUALS expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 40 (expression -> expression BIGGEREQUALS expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 40 (expression -> expression BIGGEREQUALS expression .) ]
  ! EQUALS          [ reduce using rule 40 (expression -> expression BIGGEREQUALS expression .) ]
  ! DIFF            [ reduce using rule 40 (expression -> expression BIGGEREQUALS expression .) ]
  ! AND             [ reduce using rule 40 (expression -> expression BIGGEREQUALS expression .) ]
  ! OR              [ reduce using rule 40 (expression -> expression BIGGEREQUALS expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression BIGGEREQUALS expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression BIGGEREQUALS expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression BIGGEREQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression BIGGEREQUALS expression .) ]


state 64

    (41) expression -> expression SMALLEREQUALS expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 41 (expression -> expression SMALLEREQUALS expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression SMALLEREQUALS expression .)
    RPAREN          reduce using rule 41 (expression -> expression SMALLEREQUALS expression .)
    COLON           reduce using rule 41 (expression -> expression SMALLEREQUALS expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 41 (expression -> expression SMALLEREQUALS expression .) ]
  ! SMALLER         [ reduce using rule 41 (expression -> expression SMALLEREQUALS expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 41 (expression -> expression SMALLEREQUALS expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 41 (expression -> expression SMALLEREQUALS expression .) ]
  ! EQUALS          [ reduce using rule 41 (expression -> expression SMALLEREQUALS expression .) ]
  ! DIFF            [ reduce using rule 41 (expression -> expression SMALLEREQUALS expression .) ]
  ! AND             [ reduce using rule 41 (expression -> expression SMALLEREQUALS expression .) ]
  ! OR              [ reduce using rule 41 (expression -> expression SMALLEREQUALS expression .) ]
  ! PLUS            [ reduce using rule 41 (expression -> expression SMALLEREQUALS expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression SMALLEREQUALS expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression SMALLEREQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression SMALLEREQUALS expression .) ]


state 65

    (42) expression -> expression EQUALS expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 42 (expression -> expression EQUALS expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 42 (expression -> expression EQUALS expression .)
    COLON           reduce using rule 42 (expression -> expression EQUALS expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 42 (expression -> expression EQUALS expression .) ]
  ! SMALLER         [ reduce using rule 42 (expression -> expression EQUALS expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 42 (expression -> expression EQUALS expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 42 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 42 (expression -> expression EQUALS expression .) ]
  ! DIFF            [ reduce using rule 42 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 42 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 42 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression EQUALS expression .) ]


state 66

    (43) expression -> expression DIFF expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 43 (expression -> expression DIFF expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression DIFF expression .)
    RPAREN          reduce using rule 43 (expression -> expression DIFF expression .)
    COLON           reduce using rule 43 (expression -> expression DIFF expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 43 (expression -> expression DIFF expression .) ]
  ! SMALLER         [ reduce using rule 43 (expression -> expression DIFF expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 43 (expression -> expression DIFF expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 43 (expression -> expression DIFF expression .) ]
  ! EQUALS          [ reduce using rule 43 (expression -> expression DIFF expression .) ]
  ! DIFF            [ reduce using rule 43 (expression -> expression DIFF expression .) ]
  ! AND             [ reduce using rule 43 (expression -> expression DIFF expression .) ]
  ! OR              [ reduce using rule 43 (expression -> expression DIFF expression .) ]
  ! PLUS            [ reduce using rule 43 (expression -> expression DIFF expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression DIFF expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression DIFF expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression DIFF expression .) ]


state 67

    (44) expression -> expression AND expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 44 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression AND expression .)
    RPAREN          reduce using rule 44 (expression -> expression AND expression .)
    COLON           reduce using rule 44 (expression -> expression AND expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! SMALLER         [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! DIFF            [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression AND expression .) ]


state 68

    (45) expression -> expression OR expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 45 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression OR expression .)
    RPAREN          reduce using rule 45 (expression -> expression OR expression .)
    COLON           reduce using rule 45 (expression -> expression OR expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! SMALLER         [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! DIFF            [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression OR expression .) ]


state 69

    (46) expression -> expression PLUS expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 46 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 46 (expression -> expression PLUS expression .)
    COLON           reduce using rule 46 (expression -> expression PLUS expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! SMALLER         [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! EQUALS          [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! DIFF            [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression PLUS expression .) ]


state 70

    (47) expression -> expression MINUS expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 47 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 47 (expression -> expression MINUS expression .)
    COLON           reduce using rule 47 (expression -> expression MINUS expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! SMALLER         [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! EQUALS          [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! DIFF            [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression MINUS expression .) ]


state 71

    (48) expression -> expression TIMES expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 48 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 48 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 48 (expression -> expression TIMES expression .)
    COLON           reduce using rule 48 (expression -> expression TIMES expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! SMALLER         [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! EQUALS          [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! DIFF            [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! PLUS            [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression TIMES expression .) ]


state 72

    (49) expression -> expression DIVIDE expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 49 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 49 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 49 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 49 (expression -> expression DIVIDE expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! SMALLER         [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! EQUALS          [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! DIFF            [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]


state 73

    (50) expression -> variable SUMEQUALS expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 50 (expression -> variable SUMEQUALS expression .)
    SEMICOLON       reduce using rule 50 (expression -> variable SUMEQUALS expression .)
    RPAREN          reduce using rule 50 (expression -> variable SUMEQUALS expression .)
    COLON           reduce using rule 50 (expression -> variable SUMEQUALS expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 50 (expression -> variable SUMEQUALS expression .) ]
  ! SMALLER         [ reduce using rule 50 (expression -> variable SUMEQUALS expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 50 (expression -> variable SUMEQUALS expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 50 (expression -> variable SUMEQUALS expression .) ]
  ! EQUALS          [ reduce using rule 50 (expression -> variable SUMEQUALS expression .) ]
  ! DIFF            [ reduce using rule 50 (expression -> variable SUMEQUALS expression .) ]
  ! AND             [ reduce using rule 50 (expression -> variable SUMEQUALS expression .) ]
  ! OR              [ reduce using rule 50 (expression -> variable SUMEQUALS expression .) ]
  ! PLUS            [ reduce using rule 50 (expression -> variable SUMEQUALS expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> variable SUMEQUALS expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> variable SUMEQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> variable SUMEQUALS expression .) ]


state 74

    (51) expression -> variable MINUSEQUALS expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 51 (expression -> variable MINUSEQUALS expression .)
    SEMICOLON       reduce using rule 51 (expression -> variable MINUSEQUALS expression .)
    RPAREN          reduce using rule 51 (expression -> variable MINUSEQUALS expression .)
    COLON           reduce using rule 51 (expression -> variable MINUSEQUALS expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 51 (expression -> variable MINUSEQUALS expression .) ]
  ! SMALLER         [ reduce using rule 51 (expression -> variable MINUSEQUALS expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 51 (expression -> variable MINUSEQUALS expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 51 (expression -> variable MINUSEQUALS expression .) ]
  ! EQUALS          [ reduce using rule 51 (expression -> variable MINUSEQUALS expression .) ]
  ! DIFF            [ reduce using rule 51 (expression -> variable MINUSEQUALS expression .) ]
  ! AND             [ reduce using rule 51 (expression -> variable MINUSEQUALS expression .) ]
  ! OR              [ reduce using rule 51 (expression -> variable MINUSEQUALS expression .) ]
  ! PLUS            [ reduce using rule 51 (expression -> variable MINUSEQUALS expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> variable MINUSEQUALS expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> variable MINUSEQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> variable MINUSEQUALS expression .) ]


state 75

    (52) expression -> variable TIMESEQUALS expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 52 (expression -> variable TIMESEQUALS expression .)
    SEMICOLON       reduce using rule 52 (expression -> variable TIMESEQUALS expression .)
    RPAREN          reduce using rule 52 (expression -> variable TIMESEQUALS expression .)
    COLON           reduce using rule 52 (expression -> variable TIMESEQUALS expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 52 (expression -> variable TIMESEQUALS expression .) ]
  ! SMALLER         [ reduce using rule 52 (expression -> variable TIMESEQUALS expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 52 (expression -> variable TIMESEQUALS expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 52 (expression -> variable TIMESEQUALS expression .) ]
  ! EQUALS          [ reduce using rule 52 (expression -> variable TIMESEQUALS expression .) ]
  ! DIFF            [ reduce using rule 52 (expression -> variable TIMESEQUALS expression .) ]
  ! AND             [ reduce using rule 52 (expression -> variable TIMESEQUALS expression .) ]
  ! OR              [ reduce using rule 52 (expression -> variable TIMESEQUALS expression .) ]
  ! PLUS            [ reduce using rule 52 (expression -> variable TIMESEQUALS expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> variable TIMESEQUALS expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> variable TIMESEQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> variable TIMESEQUALS expression .) ]


state 76

    (53) expression -> variable DIVIDEEQUALS expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for BIGGER resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for BIGGEREQUALS resolved as shift
  ! shift/reduce conflict for SMALLEREQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .)
    SEMICOLON       reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .)
    RPAREN          reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .)
    COLON           reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! BIGGER          [ reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .) ]
  ! SMALLER         [ reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .) ]
  ! BIGGEREQUALS    [ reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .) ]
  ! SMALLEREQUALS   [ reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .) ]
  ! EQUALS          [ reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .) ]
  ! DIFF            [ reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .) ]
  ! AND             [ reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .) ]
  ! OR              [ reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .) ]
  ! PLUS            [ reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> variable DIVIDEEQUALS expression .) ]


state 77

    (26) for_statement -> FOR LPAREN type NAME . ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE

    ASSIGN          shift and go to state 83


state 78

    (25) while_statement -> WHILE LPAREN expression RPAREN . LBRACE block RBRACE

    LBRACE          shift and go to state 84


state 79

    (23) if_statement -> IF LPAREN expression RPAREN . LBRACE block RBRACE ELSE LBRACE block RBRACE
    (24) if_statement -> IF LPAREN expression RPAREN . LBRACE block RBRACE

    LBRACE          shift and go to state 85


state 80

    (27) switch_statement -> SWITCH LPAREN NAME RPAREN . LBRACE body_case body_case body_case sintax_default RBRACE
    (28) switch_statement -> SWITCH LPAREN NAME RPAREN . LBRACE body_case body_case sintax_default RBRACE
    (29) switch_statement -> SWITCH LPAREN NAME RPAREN . LBRACE body_case sintax_default RBRACE

    LBRACE          shift and go to state 86


state 81

    (17) variable_characteristics -> NAME LCOLC NUMBER RCOLC .

    COMMA           reduce using rule 17 (variable_characteristics -> NAME LCOLC NUMBER RCOLC .)
    SEMICOLON       reduce using rule 17 (variable_characteristics -> NAME LCOLC NUMBER RCOLC .)


state 82

    (19) variable_characteristics -> NAME ASSIGN NUMBER POINT . NUMBER

    NUMBER          shift and go to state 87


state 83

    (26) for_statement -> FOR LPAREN type NAME ASSIGN . expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 88
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 84

    (25) while_statement -> WHILE LPAREN expression RPAREN LBRACE . block RBRACE
    (59) block -> . list_Declarations
    (60) list_Declarations -> . variable_Declaration list_Declarations
    (61) list_Declarations -> . sequence_variable SEMICOLON list_Declarations
    (62) list_Declarations -> . empty
    (11) variable_Declaration -> . type sequence_variable SEMICOLON
    (15) sequence_variable -> . variable_characteristics COMMA sequence_variable
    (16) sequence_variable -> . variable_characteristics
    (63) empty -> .
    (12) type -> . FLOAT
    (13) type -> . INT
    (14) type -> . CHAR
    (17) variable_characteristics -> . NAME LCOLC NUMBER RCOLC
    (18) variable_characteristics -> . NAME ASSIGN expression
    (19) variable_characteristics -> . NAME ASSIGN NUMBER POINT NUMBER
    (20) variable_characteristics -> . NAME ASSIGN NUMBER
    (21) variable_characteristics -> . NAME
    (22) variable_characteristics -> . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    RBRACE          reduce using rule 63 (empty -> .)
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    CHAR            shift and go to state 14
    NAME            shift and go to state 22
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 24
    block                          shift and go to state 89
    list_Declarations              shift and go to state 90
    variable_Declaration           shift and go to state 91
    sequence_variable              shift and go to state 92
    empty                          shift and go to state 93
    type                           shift and go to state 5
    variable_characteristics       shift and go to state 21
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 85

    (23) if_statement -> IF LPAREN expression RPAREN LBRACE . block RBRACE ELSE LBRACE block RBRACE
    (24) if_statement -> IF LPAREN expression RPAREN LBRACE . block RBRACE
    (59) block -> . list_Declarations
    (60) list_Declarations -> . variable_Declaration list_Declarations
    (61) list_Declarations -> . sequence_variable SEMICOLON list_Declarations
    (62) list_Declarations -> . empty
    (11) variable_Declaration -> . type sequence_variable SEMICOLON
    (15) sequence_variable -> . variable_characteristics COMMA sequence_variable
    (16) sequence_variable -> . variable_characteristics
    (63) empty -> .
    (12) type -> . FLOAT
    (13) type -> . INT
    (14) type -> . CHAR
    (17) variable_characteristics -> . NAME LCOLC NUMBER RCOLC
    (18) variable_characteristics -> . NAME ASSIGN expression
    (19) variable_characteristics -> . NAME ASSIGN NUMBER POINT NUMBER
    (20) variable_characteristics -> . NAME ASSIGN NUMBER
    (21) variable_characteristics -> . NAME
    (22) variable_characteristics -> . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    RBRACE          reduce using rule 63 (empty -> .)
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    CHAR            shift and go to state 14
    NAME            shift and go to state 22
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 24
    block                          shift and go to state 94
    list_Declarations              shift and go to state 90
    variable_Declaration           shift and go to state 91
    sequence_variable              shift and go to state 92
    empty                          shift and go to state 93
    type                           shift and go to state 5
    variable_characteristics       shift and go to state 21
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 86

    (27) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE . body_case body_case body_case sintax_default RBRACE
    (28) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE . body_case body_case sintax_default RBRACE
    (29) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE . body_case sintax_default RBRACE
    (30) body_case -> . CASE sintax_case

    CASE            shift and go to state 96

    body_case                      shift and go to state 95

state 87

    (19) variable_characteristics -> NAME ASSIGN NUMBER POINT NUMBER .

    COMMA           reduce using rule 19 (variable_characteristics -> NAME ASSIGN NUMBER POINT NUMBER .)
    SEMICOLON       reduce using rule 19 (variable_characteristics -> NAME ASSIGN NUMBER POINT NUMBER .)


state 88

    (26) for_statement -> FOR LPAREN type NAME ASSIGN expression . SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 97
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 89

    (25) while_statement -> WHILE LPAREN expression RPAREN LBRACE block . RBRACE

    RBRACE          shift and go to state 98


state 90

    (59) block -> list_Declarations .

    RBRACE          reduce using rule 59 (block -> list_Declarations .)
    BREAK           reduce using rule 59 (block -> list_Declarations .)


state 91

    (60) list_Declarations -> variable_Declaration . list_Declarations
    (60) list_Declarations -> . variable_Declaration list_Declarations
    (61) list_Declarations -> . sequence_variable SEMICOLON list_Declarations
    (62) list_Declarations -> . empty
    (11) variable_Declaration -> . type sequence_variable SEMICOLON
    (15) sequence_variable -> . variable_characteristics COMMA sequence_variable
    (16) sequence_variable -> . variable_characteristics
    (63) empty -> .
    (12) type -> . FLOAT
    (13) type -> . INT
    (14) type -> . CHAR
    (17) variable_characteristics -> . NAME LCOLC NUMBER RCOLC
    (18) variable_characteristics -> . NAME ASSIGN expression
    (19) variable_characteristics -> . NAME ASSIGN NUMBER POINT NUMBER
    (20) variable_characteristics -> . NAME ASSIGN NUMBER
    (21) variable_characteristics -> . NAME
    (22) variable_characteristics -> . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    RBRACE          reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    CHAR            shift and go to state 14
    NAME            shift and go to state 22
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    variable_Declaration           shift and go to state 91
    list_Declarations              shift and go to state 99
    sequence_variable              shift and go to state 92
    empty                          shift and go to state 93
    type                           shift and go to state 5
    variable_characteristics       shift and go to state 21
    expression                     shift and go to state 24
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 92

    (61) list_Declarations -> sequence_variable . SEMICOLON list_Declarations

    SEMICOLON       shift and go to state 100


state 93

    (62) list_Declarations -> empty .

    RBRACE          reduce using rule 62 (list_Declarations -> empty .)
    BREAK           reduce using rule 62 (list_Declarations -> empty .)


state 94

    (23) if_statement -> IF LPAREN expression RPAREN LBRACE block . RBRACE ELSE LBRACE block RBRACE
    (24) if_statement -> IF LPAREN expression RPAREN LBRACE block . RBRACE

    RBRACE          shift and go to state 101


state 95

    (27) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case . body_case body_case sintax_default RBRACE
    (28) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case . body_case sintax_default RBRACE
    (29) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case . sintax_default RBRACE
    (30) body_case -> . CASE sintax_case
    (32) sintax_default -> . DEFAULT COLON LBRACE block RBRACE
    (33) sintax_default -> . empty
    (63) empty -> .

    CASE            shift and go to state 96
    DEFAULT         shift and go to state 104
    RBRACE          reduce using rule 63 (empty -> .)

    body_case                      shift and go to state 102
    sintax_default                 shift and go to state 103
    empty                          shift and go to state 105

state 96

    (30) body_case -> CASE . sintax_case
    (31) sintax_case -> . expression COLON LBRACE block break_statement RBRACE
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    sintax_case                    shift and go to state 106
    expression                     shift and go to state 107
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 97

    (26) for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON . expression SEMICOLON down_up RPAREN LBRACE block RBRACE
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 108
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 98

    (25) while_statement -> WHILE LPAREN expression RPAREN LBRACE block RBRACE .

    COD_COMMENT     reduce using rule 25 (while_statement -> WHILE LPAREN expression RPAREN LBRACE block RBRACE .)
    COMMENT_MONOLINE reduce using rule 25 (while_statement -> WHILE LPAREN expression RPAREN LBRACE block RBRACE .)
    FLOAT           reduce using rule 25 (while_statement -> WHILE LPAREN expression RPAREN LBRACE block RBRACE .)
    INT             reduce using rule 25 (while_statement -> WHILE LPAREN expression RPAREN LBRACE block RBRACE .)
    CHAR            reduce using rule 25 (while_statement -> WHILE LPAREN expression RPAREN LBRACE block RBRACE .)
    FOR             reduce using rule 25 (while_statement -> WHILE LPAREN expression RPAREN LBRACE block RBRACE .)
    WHILE           reduce using rule 25 (while_statement -> WHILE LPAREN expression RPAREN LBRACE block RBRACE .)
    IF              reduce using rule 25 (while_statement -> WHILE LPAREN expression RPAREN LBRACE block RBRACE .)
    SWITCH          reduce using rule 25 (while_statement -> WHILE LPAREN expression RPAREN LBRACE block RBRACE .)
    $end            reduce using rule 25 (while_statement -> WHILE LPAREN expression RPAREN LBRACE block RBRACE .)


state 99

    (60) list_Declarations -> variable_Declaration list_Declarations .

    RBRACE          reduce using rule 60 (list_Declarations -> variable_Declaration list_Declarations .)
    BREAK           reduce using rule 60 (list_Declarations -> variable_Declaration list_Declarations .)


state 100

    (61) list_Declarations -> sequence_variable SEMICOLON . list_Declarations
    (60) list_Declarations -> . variable_Declaration list_Declarations
    (61) list_Declarations -> . sequence_variable SEMICOLON list_Declarations
    (62) list_Declarations -> . empty
    (11) variable_Declaration -> . type sequence_variable SEMICOLON
    (15) sequence_variable -> . variable_characteristics COMMA sequence_variable
    (16) sequence_variable -> . variable_characteristics
    (63) empty -> .
    (12) type -> . FLOAT
    (13) type -> . INT
    (14) type -> . CHAR
    (17) variable_characteristics -> . NAME LCOLC NUMBER RCOLC
    (18) variable_characteristics -> . NAME ASSIGN expression
    (19) variable_characteristics -> . NAME ASSIGN NUMBER POINT NUMBER
    (20) variable_characteristics -> . NAME ASSIGN NUMBER
    (21) variable_characteristics -> . NAME
    (22) variable_characteristics -> . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    RBRACE          reduce using rule 63 (empty -> .)
    BREAK           reduce using rule 63 (empty -> .)
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    CHAR            shift and go to state 14
    NAME            shift and go to state 22
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    sequence_variable              shift and go to state 92
    list_Declarations              shift and go to state 109
    variable_Declaration           shift and go to state 91
    empty                          shift and go to state 93
    type                           shift and go to state 5
    variable_characteristics       shift and go to state 21
    expression                     shift and go to state 24
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 101

    (23) if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE . ELSE LBRACE block RBRACE
    (24) if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE .

    ELSE            shift and go to state 110
    COD_COMMENT     reduce using rule 24 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE .)
    COMMENT_MONOLINE reduce using rule 24 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE .)
    FLOAT           reduce using rule 24 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE .)
    INT             reduce using rule 24 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE .)
    CHAR            reduce using rule 24 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE .)
    FOR             reduce using rule 24 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE .)
    WHILE           reduce using rule 24 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE .)
    IF              reduce using rule 24 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE .)
    SWITCH          reduce using rule 24 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE .)
    $end            reduce using rule 24 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE .)


state 102

    (27) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case . body_case sintax_default RBRACE
    (28) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case . sintax_default RBRACE
    (30) body_case -> . CASE sintax_case
    (32) sintax_default -> . DEFAULT COLON LBRACE block RBRACE
    (33) sintax_default -> . empty
    (63) empty -> .

    CASE            shift and go to state 96
    DEFAULT         shift and go to state 104
    RBRACE          reduce using rule 63 (empty -> .)

    body_case                      shift and go to state 111
    sintax_default                 shift and go to state 112
    empty                          shift and go to state 105

state 103

    (29) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default . RBRACE

    RBRACE          shift and go to state 113


state 104

    (32) sintax_default -> DEFAULT . COLON LBRACE block RBRACE

    COLON           shift and go to state 114


state 105

    (33) sintax_default -> empty .

    RBRACE          reduce using rule 33 (sintax_default -> empty .)


state 106

    (30) body_case -> CASE sintax_case .

    CASE            reduce using rule 30 (body_case -> CASE sintax_case .)
    DEFAULT         reduce using rule 30 (body_case -> CASE sintax_case .)
    RBRACE          reduce using rule 30 (body_case -> CASE sintax_case .)


state 107

    (31) sintax_case -> expression . COLON LBRACE block break_statement RBRACE
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 115
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 108

    (26) for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression . SEMICOLON down_up RPAREN LBRACE block RBRACE
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 116
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 109

    (61) list_Declarations -> sequence_variable SEMICOLON list_Declarations .

    RBRACE          reduce using rule 61 (list_Declarations -> sequence_variable SEMICOLON list_Declarations .)
    BREAK           reduce using rule 61 (list_Declarations -> sequence_variable SEMICOLON list_Declarations .)


state 110

    (23) if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE . LBRACE block RBRACE

    LBRACE          shift and go to state 117


state 111

    (27) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case . sintax_default RBRACE
    (32) sintax_default -> . DEFAULT COLON LBRACE block RBRACE
    (33) sintax_default -> . empty
    (63) empty -> .

    DEFAULT         shift and go to state 104
    RBRACE          reduce using rule 63 (empty -> .)

    sintax_default                 shift and go to state 118
    empty                          shift and go to state 105

state 112

    (28) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default . RBRACE

    RBRACE          shift and go to state 119


state 113

    (29) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE .

    COD_COMMENT     reduce using rule 29 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE .)
    COMMENT_MONOLINE reduce using rule 29 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE .)
    FLOAT           reduce using rule 29 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE .)
    INT             reduce using rule 29 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE .)
    CHAR            reduce using rule 29 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE .)
    FOR             reduce using rule 29 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE .)
    WHILE           reduce using rule 29 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE .)
    IF              reduce using rule 29 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE .)
    SWITCH          reduce using rule 29 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE .)
    $end            reduce using rule 29 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE .)


state 114

    (32) sintax_default -> DEFAULT COLON . LBRACE block RBRACE

    LBRACE          shift and go to state 120


state 115

    (31) sintax_case -> expression COLON . LBRACE block break_statement RBRACE

    LBRACE          shift and go to state 121


state 116

    (26) for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON . down_up RPAREN LBRACE block RBRACE
    (34) down_up -> . NAME MINUS MINUS
    (35) down_up -> . NAME PLUS PLUS
    (36) down_up -> . NAME ASSIGN expression
    (37) down_up -> . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 122
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 123
    down_up                        shift and go to state 124
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 117

    (23) if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE . block RBRACE
    (59) block -> . list_Declarations
    (60) list_Declarations -> . variable_Declaration list_Declarations
    (61) list_Declarations -> . sequence_variable SEMICOLON list_Declarations
    (62) list_Declarations -> . empty
    (11) variable_Declaration -> . type sequence_variable SEMICOLON
    (15) sequence_variable -> . variable_characteristics COMMA sequence_variable
    (16) sequence_variable -> . variable_characteristics
    (63) empty -> .
    (12) type -> . FLOAT
    (13) type -> . INT
    (14) type -> . CHAR
    (17) variable_characteristics -> . NAME LCOLC NUMBER RCOLC
    (18) variable_characteristics -> . NAME ASSIGN expression
    (19) variable_characteristics -> . NAME ASSIGN NUMBER POINT NUMBER
    (20) variable_characteristics -> . NAME ASSIGN NUMBER
    (21) variable_characteristics -> . NAME
    (22) variable_characteristics -> . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    RBRACE          reduce using rule 63 (empty -> .)
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    CHAR            shift and go to state 14
    NAME            shift and go to state 22
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 24
    block                          shift and go to state 125
    list_Declarations              shift and go to state 90
    variable_Declaration           shift and go to state 91
    sequence_variable              shift and go to state 92
    empty                          shift and go to state 93
    type                           shift and go to state 5
    variable_characteristics       shift and go to state 21
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 118

    (27) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default . RBRACE

    RBRACE          shift and go to state 126


state 119

    (28) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE .

    COD_COMMENT     reduce using rule 28 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE .)
    COMMENT_MONOLINE reduce using rule 28 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE .)
    FLOAT           reduce using rule 28 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE .)
    INT             reduce using rule 28 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE .)
    CHAR            reduce using rule 28 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE .)
    FOR             reduce using rule 28 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE .)
    WHILE           reduce using rule 28 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE .)
    IF              reduce using rule 28 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE .)
    SWITCH          reduce using rule 28 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE .)
    $end            reduce using rule 28 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE .)


state 120

    (32) sintax_default -> DEFAULT COLON LBRACE . block RBRACE
    (59) block -> . list_Declarations
    (60) list_Declarations -> . variable_Declaration list_Declarations
    (61) list_Declarations -> . sequence_variable SEMICOLON list_Declarations
    (62) list_Declarations -> . empty
    (11) variable_Declaration -> . type sequence_variable SEMICOLON
    (15) sequence_variable -> . variable_characteristics COMMA sequence_variable
    (16) sequence_variable -> . variable_characteristics
    (63) empty -> .
    (12) type -> . FLOAT
    (13) type -> . INT
    (14) type -> . CHAR
    (17) variable_characteristics -> . NAME LCOLC NUMBER RCOLC
    (18) variable_characteristics -> . NAME ASSIGN expression
    (19) variable_characteristics -> . NAME ASSIGN NUMBER POINT NUMBER
    (20) variable_characteristics -> . NAME ASSIGN NUMBER
    (21) variable_characteristics -> . NAME
    (22) variable_characteristics -> . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    RBRACE          reduce using rule 63 (empty -> .)
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    CHAR            shift and go to state 14
    NAME            shift and go to state 22
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    block                          shift and go to state 127
    list_Declarations              shift and go to state 90
    variable_Declaration           shift and go to state 91
    sequence_variable              shift and go to state 92
    empty                          shift and go to state 93
    type                           shift and go to state 5
    variable_characteristics       shift and go to state 21
    expression                     shift and go to state 24
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 121

    (31) sintax_case -> expression COLON LBRACE . block break_statement RBRACE
    (59) block -> . list_Declarations
    (60) list_Declarations -> . variable_Declaration list_Declarations
    (61) list_Declarations -> . sequence_variable SEMICOLON list_Declarations
    (62) list_Declarations -> . empty
    (11) variable_Declaration -> . type sequence_variable SEMICOLON
    (15) sequence_variable -> . variable_characteristics COMMA sequence_variable
    (16) sequence_variable -> . variable_characteristics
    (63) empty -> .
    (12) type -> . FLOAT
    (13) type -> . INT
    (14) type -> . CHAR
    (17) variable_characteristics -> . NAME LCOLC NUMBER RCOLC
    (18) variable_characteristics -> . NAME ASSIGN expression
    (19) variable_characteristics -> . NAME ASSIGN NUMBER POINT NUMBER
    (20) variable_characteristics -> . NAME ASSIGN NUMBER
    (21) variable_characteristics -> . NAME
    (22) variable_characteristics -> . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    BREAK           reduce using rule 63 (empty -> .)
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    CHAR            shift and go to state 14
    NAME            shift and go to state 22
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 24
    block                          shift and go to state 128
    list_Declarations              shift and go to state 90
    variable_Declaration           shift and go to state 91
    sequence_variable              shift and go to state 92
    empty                          shift and go to state 93
    type                           shift and go to state 5
    variable_characteristics       shift and go to state 21
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 122

    (34) down_up -> NAME . MINUS MINUS
    (35) down_up -> NAME . PLUS PLUS
    (36) down_up -> NAME . ASSIGN expression
    (58) variable -> NAME .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 129
    PLUS            shift and go to state 130
    ASSIGN          shift and go to state 131
    SUMEQUALS       reduce using rule 58 (variable -> NAME .)
    MINUSEQUALS     reduce using rule 58 (variable -> NAME .)
    TIMESEQUALS     reduce using rule 58 (variable -> NAME .)
    DIVIDEEQUALS    reduce using rule 58 (variable -> NAME .)
    BIGGER          reduce using rule 58 (variable -> NAME .)
    SMALLER         reduce using rule 58 (variable -> NAME .)
    BIGGEREQUALS    reduce using rule 58 (variable -> NAME .)
    SMALLEREQUALS   reduce using rule 58 (variable -> NAME .)
    EQUALS          reduce using rule 58 (variable -> NAME .)
    DIFF            reduce using rule 58 (variable -> NAME .)
    AND             reduce using rule 58 (variable -> NAME .)
    OR              reduce using rule 58 (variable -> NAME .)
    TIMES           reduce using rule 58 (variable -> NAME .)
    DIVIDE          reduce using rule 58 (variable -> NAME .)
    RPAREN          reduce using rule 58 (variable -> NAME .)

  ! PLUS            [ reduce using rule 58 (variable -> NAME .) ]
  ! MINUS           [ reduce using rule 58 (variable -> NAME .) ]


state 123

    (37) down_up -> expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 37 (down_up -> expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 124

    (26) for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up . RPAREN LBRACE block RBRACE

    RPAREN          shift and go to state 132


state 125

    (23) if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block . RBRACE

    RBRACE          shift and go to state 133


state 126

    (27) switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE .

    COD_COMMENT     reduce using rule 27 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE .)
    COMMENT_MONOLINE reduce using rule 27 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE .)
    FLOAT           reduce using rule 27 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE .)
    INT             reduce using rule 27 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE .)
    CHAR            reduce using rule 27 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE .)
    FOR             reduce using rule 27 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE .)
    WHILE           reduce using rule 27 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE .)
    IF              reduce using rule 27 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE .)
    SWITCH          reduce using rule 27 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE .)
    $end            reduce using rule 27 (switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE .)


state 127

    (32) sintax_default -> DEFAULT COLON LBRACE block . RBRACE

    RBRACE          shift and go to state 134


state 128

    (31) sintax_case -> expression COLON LBRACE block . break_statement RBRACE
    (64) break_statement -> . BREAK SEMICOLON

    BREAK           shift and go to state 136

    break_statement                shift and go to state 135

state 129

    (34) down_up -> NAME MINUS . MINUS

    MINUS           shift and go to state 137


state 130

    (35) down_up -> NAME PLUS . PLUS

    PLUS            shift and go to state 138


state 131

    (36) down_up -> NAME ASSIGN . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    NAME            shift and go to state 54
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    expression                     shift and go to state 139
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 132

    (26) for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN . LBRACE block RBRACE

    LBRACE          shift and go to state 140


state 133

    (23) if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE .

    COD_COMMENT     reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE .)
    COMMENT_MONOLINE reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE .)
    FLOAT           reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE .)
    INT             reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE .)
    CHAR            reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE .)
    FOR             reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE .)
    WHILE           reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE .)
    IF              reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE .)
    SWITCH          reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE .)
    $end            reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE .)


state 134

    (32) sintax_default -> DEFAULT COLON LBRACE block RBRACE .

    RBRACE          reduce using rule 32 (sintax_default -> DEFAULT COLON LBRACE block RBRACE .)


state 135

    (31) sintax_case -> expression COLON LBRACE block break_statement . RBRACE

    RBRACE          shift and go to state 141


state 136

    (64) break_statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 142


state 137

    (34) down_up -> NAME MINUS MINUS .

    RPAREN          reduce using rule 34 (down_up -> NAME MINUS MINUS .)


state 138

    (35) down_up -> NAME PLUS PLUS .

    RPAREN          reduce using rule 35 (down_up -> NAME PLUS PLUS .)


state 139

    (36) down_up -> NAME ASSIGN expression .
    (38) expression -> expression . BIGGER expression
    (39) expression -> expression . SMALLER expression
    (40) expression -> expression . BIGGEREQUALS expression
    (41) expression -> expression . SMALLEREQUALS expression
    (42) expression -> expression . EQUALS expression
    (43) expression -> expression . DIFF expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 36 (down_up -> NAME ASSIGN expression .)
    BIGGER          shift and go to state 36
    SMALLER         shift and go to state 37
    BIGGEREQUALS    shift and go to state 38
    SMALLEREQUALS   shift and go to state 39
    EQUALS          shift and go to state 40
    DIFF            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 140

    (26) for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE . block RBRACE
    (59) block -> . list_Declarations
    (60) list_Declarations -> . variable_Declaration list_Declarations
    (61) list_Declarations -> . sequence_variable SEMICOLON list_Declarations
    (62) list_Declarations -> . empty
    (11) variable_Declaration -> . type sequence_variable SEMICOLON
    (15) sequence_variable -> . variable_characteristics COMMA sequence_variable
    (16) sequence_variable -> . variable_characteristics
    (63) empty -> .
    (12) type -> . FLOAT
    (13) type -> . INT
    (14) type -> . CHAR
    (17) variable_characteristics -> . NAME LCOLC NUMBER RCOLC
    (18) variable_characteristics -> . NAME ASSIGN expression
    (19) variable_characteristics -> . NAME ASSIGN NUMBER POINT NUMBER
    (20) variable_characteristics -> . NAME ASSIGN NUMBER
    (21) variable_characteristics -> . NAME
    (22) variable_characteristics -> . expression
    (38) expression -> . expression BIGGER expression
    (39) expression -> . expression SMALLER expression
    (40) expression -> . expression BIGGEREQUALS expression
    (41) expression -> . expression SMALLEREQUALS expression
    (42) expression -> . expression EQUALS expression
    (43) expression -> . expression DIFF expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . variable SUMEQUALS expression
    (51) expression -> . variable MINUSEQUALS expression
    (52) expression -> . variable TIMESEQUALS expression
    (53) expression -> . variable DIVIDEEQUALS expression
    (54) expression -> . literal
    (55) expression -> . variable
    (58) variable -> . NAME
    (56) literal -> . NORMALSTRING
    (57) literal -> . NUMBER

    RBRACE          reduce using rule 63 (empty -> .)
    FLOAT           shift and go to state 12
    INT             shift and go to state 13
    CHAR            shift and go to state 14
    NAME            shift and go to state 22
    NORMALSTRING    shift and go to state 27
    NUMBER          shift and go to state 23

    type                           shift and go to state 5
    expression                     shift and go to state 24
    block                          shift and go to state 143
    list_Declarations              shift and go to state 90
    variable_Declaration           shift and go to state 91
    sequence_variable              shift and go to state 92
    empty                          shift and go to state 93
    variable_characteristics       shift and go to state 21
    variable                       shift and go to state 25
    literal                        shift and go to state 26

state 141

    (31) sintax_case -> expression COLON LBRACE block break_statement RBRACE .

    CASE            reduce using rule 31 (sintax_case -> expression COLON LBRACE block break_statement RBRACE .)
    DEFAULT         reduce using rule 31 (sintax_case -> expression COLON LBRACE block break_statement RBRACE .)
    RBRACE          reduce using rule 31 (sintax_case -> expression COLON LBRACE block break_statement RBRACE .)


state 142

    (64) break_statement -> BREAK SEMICOLON .

    RBRACE          reduce using rule 64 (break_statement -> BREAK SEMICOLON .)


state 143

    (26) for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block . RBRACE

    RBRACE          shift and go to state 144


state 144

    (26) for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE .

    COD_COMMENT     reduce using rule 26 (for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE .)
    COMMENT_MONOLINE reduce using rule 26 (for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE .)
    FLOAT           reduce using rule 26 (for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE .)
    INT             reduce using rule 26 (for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE .)
    CHAR            reduce using rule 26 (for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE .)
    FOR             reduce using rule 26 (for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE .)
    WHILE           reduce using rule 26 (for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE .)
    IF              reduce using rule 26 (for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE .)
    SWITCH          reduce using rule 26 (for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE .)
    $end            reduce using rule 26 (for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COD_COMMENT in state 19 resolved as shift
WARNING: shift/reduce conflict for COMMENT_MONOLINE in state 19 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 19 resolved as shift
WARNING: shift/reduce conflict for INT in state 19 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 19 resolved as shift
WARNING: shift/reduce conflict for FOR in state 19 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 19 resolved as shift
WARNING: shift/reduce conflict for IF in state 19 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 19 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 61 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 61 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 61 resolved as shift
WARNING: shift/reduce conflict for AND in state 61 resolved as shift
WARNING: shift/reduce conflict for OR in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 61 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 61 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 62 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 62 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 63 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 63 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 63 resolved as shift
WARNING: shift/reduce conflict for AND in state 63 resolved as shift
WARNING: shift/reduce conflict for OR in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 64 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 64 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 64 resolved as shift
WARNING: shift/reduce conflict for AND in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 65 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 65 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 66 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 66 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 66 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 66 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 66 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 66 resolved as shift
WARNING: shift/reduce conflict for AND in state 66 resolved as shift
WARNING: shift/reduce conflict for OR in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 66 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 66 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 67 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 67 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 67 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 67 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 67 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 68 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 68 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 68 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 68 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 68 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 68 resolved as shift
WARNING: shift/reduce conflict for AND in state 68 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 68 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 69 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 69 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 69 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 69 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 69 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 70 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 70 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 71 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 71 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 71 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 71 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 71 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 72 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 72 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 72 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 72 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 72 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 73 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 73 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 73 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 73 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 73 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 74 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 74 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 74 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 74 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 74 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 74 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 75 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 75 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 75 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 75 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 75 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 75 resolved as shift
WARNING: shift/reduce conflict for AND in state 75 resolved as shift
WARNING: shift/reduce conflict for OR in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 75 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 75 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 76 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 76 resolved as shift
WARNING: shift/reduce conflict for BIGGEREQUALS in state 76 resolved as shift
WARNING: shift/reduce conflict for SMALLEREQUALS in state 76 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 76 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 76 resolved as shift
WARNING: shift/reduce conflict for AND in state 76 resolved as shift
WARNING: shift/reduce conflict for OR in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 122 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 122 resolved as shift
WARNING: reduce/reduce conflict in state 22 resolved using rule (variable_characteristics -> NAME)
WARNING: rejected rule (variable -> NAME) in state 22
WARNING: reduce/reduce conflict in state 60 resolved using rule (variable_characteristics -> NAME ASSIGN NUMBER)
WARNING: rejected rule (literal -> NUMBER) in state 60
