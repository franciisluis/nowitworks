
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BIGGER BIGGEREQUALS BREAK CASE CHAR COD_COMMENT COLON COMMA COMMENT_MONOLINE DEFAULT DIFF DIVIDE DIVIDEEQUALS ELSE EQUALS EXPLAMATION FLOAT FOR IF INT INTERROGATION LBRACE LCOLC LPAREN MINUS MINUSEQUALS MOD NAME NORMALSTRING NUMBER OR PLUS POINT RBRACE RCOLC RPAREN SEMICOLON SMALLER SMALLEREQUALS SUMEQUALS SWITCH TIMES TIMESEQUALS WHILEprogram : program program\n                | variable_Declaration\n                | statement\n                statement : for_statement\n                 | while_statement\n                 | if_statement\n                 | switch_statement variable_Declaration : type sequence_variable SEMICOLONtype : FLOAT\n            | INT\n            | CHAR\n            sequence_variable  : variable_characteristics COMMA sequence_variable\n                          | variable_characteristics\n    variable_characteristics   :  NAME LCOLC NUMBER RCOLC\n                            |  NAME ASSIGN expression\n                            |  NAME ASSIGN NUMBER POINT NUMBER\n                            |  NAME ASSIGN NUMBER\n                            |  NAME\n                            | expressionif_statement : IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE\n                    | IF LPAREN expression RPAREN LBRACE block RBRACEwhile_statement : WHILE LPAREN expression RPAREN LBRACE block RBRACEfor_statement  :  FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACEswitch_statement : SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE\n                        | SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE\n                        | SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE body_case : CASE sintax_case\n                sintax_case : expression COLON LBRACE block break_statement RBRACE\n                sintax_default : DEFAULT COLON LBRACE block RBRACE\n                      | empty\n                down_up : NAME MINUS MINUS\n                   | NAME PLUS PLUS\n                   | NAME ASSIGN expression\n                   | expressionexpression : expression BIGGER expression\n                  | expression SMALLER expression\n                  | expression BIGGEREQUALS expression\n                  | expression SMALLEREQUALS expression\n                  | expression EQUALS expression\n                  | expression DIFF expression\n                  | expression AND expression\n                  | expression OR expression\n    expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n    expression :   variable SUMEQUALS expression\n                  |   variable MINUSEQUALS expression\n                  |   variable TIMESEQUALS  expression\n                  |   variable DIVIDEEQUALS expression\n    expression : literalexpression : variableliteral : NORMALSTRING\n                | NUMBER\n                variable : NAME\n                block : list_Declarations list_Declarations : variable_Declaration list_Declarations\n                            | sequence_variable SEMICOLON list_Declarations\n                            | emptyempty :break_statement : BREAK SEMICOLON'
    
_lr_action_items = {'FLOAT':([0,1,2,3,5,6,7,8,16,25,29,81,82,88,95,97,98,110,114,116,117,118,123,130,137,141,],[9,9,-2,-3,-4,-5,-6,-7,9,9,-8,9,9,9,-22,9,-21,-26,9,-25,9,9,-24,-20,9,-23,]),'INT':([0,1,2,3,5,6,7,8,16,25,29,81,82,88,95,97,98,110,114,116,117,118,123,130,137,141,],[10,10,-2,-3,-4,-5,-6,-7,10,10,-8,10,10,10,-22,10,-21,-26,10,-25,10,10,-24,-20,10,-23,]),'CHAR':([0,1,2,3,5,6,7,8,16,25,29,81,82,88,95,97,98,110,114,116,117,118,123,130,137,141,],[11,11,-2,-3,-4,-5,-6,-7,11,11,-8,11,11,11,-22,11,-21,-26,11,-25,11,11,-24,-20,11,-23,]),'FOR':([0,1,2,3,5,6,7,8,16,29,95,98,110,116,123,130,141,],[12,12,-2,-3,-4,-5,-6,-7,12,-8,-22,-21,-26,-25,-24,-20,-23,]),'WHILE':([0,1,2,3,5,6,7,8,16,29,95,98,110,116,123,130,141,],[13,13,-2,-3,-4,-5,-6,-7,13,-8,-22,-21,-26,-25,-24,-20,-23,]),'IF':([0,1,2,3,5,6,7,8,16,29,95,98,110,116,123,130,141,],[14,14,-2,-3,-4,-5,-6,-7,14,-8,-22,-21,-26,-25,-24,-20,-23,]),'SWITCH':([0,1,2,3,5,6,7,8,16,29,95,98,110,116,123,130,141,],[15,15,-2,-3,-4,-5,-6,-7,15,-8,-22,-21,-26,-25,-24,-20,-23,]),'$end':([1,2,3,5,6,7,8,16,29,95,98,110,116,123,130,141,],[0,-2,-3,-4,-5,-6,-7,-1,-8,-22,-21,-26,-25,-24,-20,-23,]),'NAME':([4,9,10,11,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,80,81,82,88,93,94,97,113,114,117,118,128,137,],[19,-9,-10,-11,51,51,53,-8,19,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,74,51,19,19,19,51,51,19,119,19,19,19,51,19,]),'NORMALSTRING':([4,9,10,11,26,27,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,80,81,82,88,93,94,97,113,114,117,118,128,137,],[24,-9,-10,-11,24,24,-8,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'NUMBER':([4,9,10,11,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,79,80,81,82,88,93,94,97,113,114,117,118,128,137,],[20,-9,-10,-11,20,20,-8,20,55,57,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,84,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LPAREN':([12,13,14,15,],[25,26,27,28,]),'SEMICOLON':([17,18,19,20,21,22,23,24,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,85,89,105,133,],[29,-13,-18,-54,-19,-52,-51,-53,-55,-12,-15,-17,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-14,-16,94,97,113,139,]),'COMMA':([18,19,20,21,22,23,24,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,],[30,-18,-54,-19,-52,-51,-53,-55,-15,-17,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-14,-16,]),'LCOLC':([19,],[31,]),'ASSIGN':([19,74,119,],[32,80,128,]),'SUMEQUALS':([19,22,51,119,],[-55,45,-55,-55,]),'MINUSEQUALS':([19,22,51,119,],[-55,46,-55,-55,]),'TIMESEQUALS':([19,22,51,119,],[-55,47,-55,-55,]),'DIVIDEEQUALS':([19,22,51,119,],[-55,48,-55,-55,]),'BIGGER':([19,20,21,22,23,24,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,104,105,119,120,136,],[-55,-54,33,-52,-51,-53,33,-55,33,33,-54,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-55,33,33,]),'SMALLER':([19,20,21,22,23,24,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,104,105,119,120,136,],[-55,-54,34,-52,-51,-53,34,-55,34,34,-54,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-55,34,34,]),'BIGGEREQUALS':([19,20,21,22,23,24,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,104,105,119,120,136,],[-55,-54,35,-52,-51,-53,35,-55,35,35,-54,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-55,35,35,]),'SMALLEREQUALS':([19,20,21,22,23,24,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,104,105,119,120,136,],[-55,-54,36,-52,-51,-53,36,-55,36,36,-54,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-55,36,36,]),'EQUALS':([19,20,21,22,23,24,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,104,105,119,120,136,],[-55,-54,37,-52,-51,-53,37,-55,37,37,-54,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-55,37,37,]),'DIFF':([19,20,21,22,23,24,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,104,105,119,120,136,],[-55,-54,38,-52,-51,-53,38,-55,38,38,-54,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-55,38,38,]),'AND':([19,20,21,22,23,24,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,104,105,119,120,136,],[-55,-54,39,-52,-51,-53,39,-55,39,39,-54,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-55,39,39,]),'OR':([19,20,21,22,23,24,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,104,105,119,120,136,],[-55,-54,40,-52,-51,-53,40,-55,40,40,-54,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-55,40,40,]),'PLUS':([19,20,21,22,23,24,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,104,105,119,120,127,136,],[-55,-54,41,-52,-51,-53,41,-55,41,41,-54,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,127,41,135,41,]),'MINUS':([19,20,21,22,23,24,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,104,105,119,120,126,136,],[-55,-54,42,-52,-51,-53,42,-55,42,42,-54,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,126,42,134,42,]),'TIMES':([19,20,21,22,23,24,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,104,105,119,120,136,],[-55,-54,43,-52,-51,-53,43,-55,43,43,-54,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-55,43,43,]),'DIVIDE':([19,20,21,22,23,24,50,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,104,105,119,120,136,],[-55,-54,44,-52,-51,-53,44,-55,44,44,-54,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-55,44,44,]),'RPAREN':([20,22,23,24,50,51,52,53,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,119,120,121,134,135,136,],[-54,-52,-51,-53,75,-55,76,77,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-55,-34,129,-31,-32,-33,]),'COLON':([20,22,23,24,51,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,101,104,],[-54,-52,-51,-53,-55,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,111,112,]),'RBRACE':([29,81,82,86,87,88,90,91,92,96,97,99,100,102,103,106,108,109,114,115,117,122,124,131,132,137,138,139,140,],[-8,-60,-60,95,-56,-60,-59,98,-60,-57,-60,-60,110,-30,-27,-58,-60,116,-60,123,-60,130,131,-29,138,-60,-28,-61,141,]),'BREAK':([29,87,88,90,96,97,106,118,125,],[-8,-56,-60,-59,-57,-60,-58,-60,133,]),'RCOLC':([55,],[78,]),'POINT':([57,],[79,]),'LBRACE':([75,76,77,107,111,112,129,],[81,82,83,114,117,118,137,]),'CASE':([83,92,99,103,138,],[93,93,93,-27,-28,]),'DEFAULT':([92,99,103,108,138,],[101,101,-27,101,-28,]),'ELSE':([98,],[107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,1,16,],[1,16,16,]),'variable_Declaration':([0,1,16,81,82,88,97,114,117,118,137,],[2,2,2,88,88,88,88,88,88,88,88,]),'statement':([0,1,16,],[3,3,3,]),'type':([0,1,16,25,81,82,88,97,114,117,118,137,],[4,4,4,49,4,4,4,4,4,4,4,4,]),'for_statement':([0,1,16,],[5,5,5,]),'while_statement':([0,1,16,],[6,6,6,]),'if_statement':([0,1,16,],[7,7,7,]),'switch_statement':([0,1,16,],[8,8,8,]),'sequence_variable':([4,30,81,82,88,97,114,117,118,137,],[17,54,89,89,89,89,89,89,89,89,]),'variable_characteristics':([4,30,81,82,88,97,114,117,118,137,],[18,18,18,18,18,18,18,18,18,18,]),'expression':([4,26,27,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,80,81,82,88,93,94,97,113,114,117,118,128,137,],[21,50,52,21,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,21,21,21,104,105,21,120,21,21,21,136,21,]),'variable':([4,26,27,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,80,81,82,88,93,94,97,113,114,117,118,128,137,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'literal':([4,26,27,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,80,81,82,88,93,94,97,113,114,117,118,128,137,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'block':([81,82,114,117,118,137,],[86,91,122,124,125,140,]),'list_Declarations':([81,82,88,97,114,117,118,137,],[87,87,96,106,87,87,87,87,]),'empty':([81,82,88,92,97,99,108,114,117,118,137,],[90,90,90,102,90,102,102,90,90,90,90,]),'body_case':([83,92,99,],[92,99,108,]),'sintax_default':([92,99,108,],[100,109,115,]),'sintax_case':([93,],[103,]),'down_up':([113,],[121,]),'break_statement':([125,],[132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program program','program',2,'p_program','gramatica.py',16),
  ('program -> variable_Declaration','program',1,'p_program','gramatica.py',17),
  ('program -> statement','program',1,'p_program','gramatica.py',18),
  ('statement -> for_statement','statement',1,'p_statement','gramatica.py',23),
  ('statement -> while_statement','statement',1,'p_statement','gramatica.py',24),
  ('statement -> if_statement','statement',1,'p_statement','gramatica.py',25),
  ('statement -> switch_statement','statement',1,'p_statement','gramatica.py',26),
  ('variable_Declaration -> type sequence_variable SEMICOLON','variable_Declaration',3,'p_variable_Declaration','gramatica.py',30),
  ('type -> FLOAT','type',1,'p_define_type','gramatica.py',34),
  ('type -> INT','type',1,'p_define_type','gramatica.py',35),
  ('type -> CHAR','type',1,'p_define_type','gramatica.py',36),
  ('sequence_variable -> variable_characteristics COMMA sequence_variable','sequence_variable',3,'p_sequence_variable','gramatica.py',40),
  ('sequence_variable -> variable_characteristics','sequence_variable',1,'p_sequence_variable','gramatica.py',41),
  ('variable_characteristics -> NAME LCOLC NUMBER RCOLC','variable_characteristics',4,'p_variable_characteristics','gramatica.py',46),
  ('variable_characteristics -> NAME ASSIGN expression','variable_characteristics',3,'p_variable_characteristics','gramatica.py',47),
  ('variable_characteristics -> NAME ASSIGN NUMBER POINT NUMBER','variable_characteristics',5,'p_variable_characteristics','gramatica.py',48),
  ('variable_characteristics -> NAME ASSIGN NUMBER','variable_characteristics',3,'p_variable_characteristics','gramatica.py',49),
  ('variable_characteristics -> NAME','variable_characteristics',1,'p_variable_characteristics','gramatica.py',50),
  ('variable_characteristics -> expression','variable_characteristics',1,'p_variable_characteristics','gramatica.py',51),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE','if_statement',11,'p_statement_if','gramatica.py',54),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE block RBRACE','if_statement',7,'p_statement_if','gramatica.py',55),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE block RBRACE','while_statement',7,'p_statement_while','gramatica.py',58),
  ('for_statement -> FOR LPAREN type NAME ASSIGN expression SEMICOLON expression SEMICOLON down_up RPAREN LBRACE block RBRACE','for_statement',14,'p_statement_for','gramatica.py',61),
  ('switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case body_case sintax_default RBRACE','switch_statement',10,'p_statement_switch','gramatica.py',64),
  ('switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case body_case sintax_default RBRACE','switch_statement',9,'p_statement_switch','gramatica.py',65),
  ('switch_statement -> SWITCH LPAREN NAME RPAREN LBRACE body_case sintax_default RBRACE','switch_statement',8,'p_statement_switch','gramatica.py',66),
  ('body_case -> CASE sintax_case','body_case',2,'p_body_case','gramatica.py',69),
  ('sintax_case -> expression COLON LBRACE block break_statement RBRACE','sintax_case',6,'p_sintax_case','gramatica.py',72),
  ('sintax_default -> DEFAULT COLON LBRACE block RBRACE','sintax_default',5,'p_sintax_default','gramatica.py',75),
  ('sintax_default -> empty','sintax_default',1,'p_sintax_default','gramatica.py',76),
  ('down_up -> NAME MINUS MINUS','down_up',3,'p_down_up','gramatica.py',80),
  ('down_up -> NAME PLUS PLUS','down_up',3,'p_down_up','gramatica.py',81),
  ('down_up -> NAME ASSIGN expression','down_up',3,'p_down_up','gramatica.py',82),
  ('down_up -> expression','down_up',1,'p_down_up','gramatica.py',83),
  ('expression -> expression BIGGER expression','expression',3,'p_expression_logop','gramatica.py',87),
  ('expression -> expression SMALLER expression','expression',3,'p_expression_logop','gramatica.py',88),
  ('expression -> expression BIGGEREQUALS expression','expression',3,'p_expression_logop','gramatica.py',89),
  ('expression -> expression SMALLEREQUALS expression','expression',3,'p_expression_logop','gramatica.py',90),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_logop','gramatica.py',91),
  ('expression -> expression DIFF expression','expression',3,'p_expression_logop','gramatica.py',92),
  ('expression -> expression AND expression','expression',3,'p_expression_logop','gramatica.py',93),
  ('expression -> expression OR expression','expression',3,'p_expression_logop','gramatica.py',94),
  ('expression -> expression PLUS expression','expression',3,'p_binary_operators','gramatica.py',98),
  ('expression -> expression MINUS expression','expression',3,'p_binary_operators','gramatica.py',99),
  ('expression -> expression TIMES expression','expression',3,'p_binary_operators','gramatica.py',100),
  ('expression -> expression DIVIDE expression','expression',3,'p_binary_operators','gramatica.py',101),
  ('expression -> variable SUMEQUALS expression','expression',3,'p_assignment_operators','gramatica.py',104),
  ('expression -> variable MINUSEQUALS expression','expression',3,'p_assignment_operators','gramatica.py',105),
  ('expression -> variable TIMESEQUALS expression','expression',3,'p_assignment_operators','gramatica.py',106),
  ('expression -> variable DIVIDEEQUALS expression','expression',3,'p_assignment_operators','gramatica.py',107),
  ('expression -> literal','expression',1,'p_define_expression_literal','gramatica.py',110),
  ('expression -> variable','expression',1,'p_define_expression_var','gramatica.py',113),
  ('literal -> NORMALSTRING','literal',1,'p_literal','gramatica.py',116),
  ('literal -> NUMBER','literal',1,'p_literal','gramatica.py',117),
  ('variable -> NAME','variable',1,'p_variable','gramatica.py',121),
  ('block -> list_Declarations','block',1,'p_block','gramatica.py',126),
  ('list_Declarations -> variable_Declaration list_Declarations','list_Declarations',2,'p_list_Declarations','gramatica.py',130),
  ('list_Declarations -> sequence_variable SEMICOLON list_Declarations','list_Declarations',3,'p_list_Declarations','gramatica.py',131),
  ('list_Declarations -> empty','list_Declarations',1,'p_list_Declarations','gramatica.py',132),
  ('empty -> <empty>','empty',0,'p_empty','gramatica.py',135),
  ('break_statement -> BREAK SEMICOLON','break_statement',2,'p_statement_break','gramatica.py',139),
]
